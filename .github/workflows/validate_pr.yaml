name: Validate PR and Update Version

on:
  pull_request:
    branches:
      - develop

permissions:
  contents: write

jobs:
  validate_and_update:
    name: Validate PR to develop
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'pull_request' &&
      github.actor != 'github-actions[bot]' &&
      !contains(github.event.pull_request.title, '[skip ci]')

    steps:
      - name: Ensure PR targets develop branch
        run: |
          if [[ "${{ github.base_ref }}" != "develop" ]]; then
            echo "‚ùå This PR must be based on 'develop'. Current base: ${{ github.base_ref }}"
            exit 1
          fi

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Validate Changelog Update
        run: |
          if ! git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} | grep -q CHANGELOG.md; then
            echo "‚ùå CHANGELOG.md must be updated in this PR."
            exit 1
          fi

      - name: Install Dependencies
        run: flutter pub get

      - name: Check Formatting (read-only)
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze Code
        run: flutter analyze

      - name: Run Tests
        run: flutter test

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Configure SSH Signing Key
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_SIGNING_KEY }}" > ~/.ssh/commit_signing_key
          chmod 600 ~/.ssh/commit_signing_key
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/commit_signing_key
          ssh-keygen -y -f ~/.ssh/commit_signing_key > ~/.ssh/commit_signing_key.pub
          git config --global user.name "${{ secrets.BOT_NAME }}"
          git config --global user.email "${{ secrets.BOT_EMAIL }}"
          git config --global user.signingkey ~/.ssh/commit_signing_key
          git config --global commit.gpgsign true
          git config --global gpg.format ssh

      - name: Increment Version Based on Label (same-repo PRs)
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail

          CURRENT_VERSION=$(grep '^version:' pubspec.yaml | awk '{print $2}')
          echo "Current version: $CURRENT_VERSION"

          LABELS_RESPONSE=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels")

          LABELS=$(echo "$LABELS_RESPONSE" | jq -r '.[].name')

          if echo "$LABELS" | grep -q "major"; then
            UPDATED_VERSION=$(echo "$CURRENT_VERSION" | awk -F. '{$1+=1; $2=0; $3=0}1' OFS=".")
          elif echo "$LABELS" | grep -q "minor"; then
            UPDATED_VERSION=$(echo "$CURRENT_VERSION" | awk -F. '{$2+=1; $3=0}1' OFS=".")
          elif echo "$LABELS" | grep -q "patch"; then
            UPDATED_VERSION=$(echo "$CURRENT_VERSION" | awk -F. '{$3+=1}1' OFS=".")
          else
            echo "‚ùå No version label found. Please add 'major', 'minor', or 'patch'."
            exit 1
          fi

          echo "Updated version: $UPDATED_VERSION"
          sed -i "s/^version:.*/version: $UPDATED_VERSION/" pubspec.yaml

          git add pubspec.yaml
          # üëá Importante: [skip ci] para evitar disparar workflows de push
          git commit -S -m "chore(version): bump to $UPDATED_VERSION [skip ci]"

      - name: Sync PR branch and push with retry (same-repo PRs)
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
        run: |
          set -e
          BRANCH="${{ github.head_ref }}"
          git config --global rebase.gpgSign true

          for i in 1 2 3; do
            git fetch origin "$BRANCH"
            git pull --rebase origin "$BRANCH" || true
            if git push; then
              echo "‚úÖ Push OK"
              exit 0
            fi
            echo "üîÅ Reintentando ($i/3)..."
            sleep $((i*2))
          done
          echo "‚ùå No se pudo pushear tras reintentos"; exit 1

      - name: Skipping version bump/push for fork PRs
        if: ${{ github.event.pull_request.head.repo.full_name != github.repository }}
        run: |
          echo "‚ÑπÔ∏è Fork PR detected: skipping automatic version bump & push."
          echo "Please bump 'pubspec.yaml' locally or let a maintainer apply the label and update."
